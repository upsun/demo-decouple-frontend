routes:
  "https://{all}/": { type: upstream, upstream: "app:http" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }


services:
  database:
    type: postgresql:17

applications:
  app:
    source:
      root: "/backend"
    
    # Composable image feature
    stack:
      - "clamav"
      - "php@8.4":
          extensions:
            - mailparse
            - apcu
            - sodium
            - xsl
            - pdo_sqlite
      - "nodejs@22"
    
    relationships:
      database:
    
    variables:
      php:
        opcache.preload: config/preload.php
    build:
      flavor: none
    
    web:
      locations:
        "/":
          root: "public"
          expires: 1h
          passthru: "/index.php"
    
    mounts:
      "/var": { source: storage, source_path: var }
      # Mount of data to scan.
      'mydata':
        source: storage
        source_path: mydata
    hooks:
      build: |
        set -x -e
        ./scripts/clam_install.sh 
        composer -v
        curl -fs https://get.symfony.com/cloud/configurator | bash
        php-ext-install mailparse 3.1.6
        
        php -m
        
        NODE_VERSION=22 symfony-build
        #curl -fsS https://raw.githubusercontent.com/upsun/snippets/main/src/install-github-asset.sh | bash /dev/stdin "Cisco-Talos/clamav"
      
      
      deploy: |
        set -x -e
        
        symfony-deploy
    
    crons:
      security-check:
        # Check that no security issues have been found for PHP packages deployed in production
        spec: '50 23 * * *'
        cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
      clean-expired-sessions:
        spec: '17,47 * * * *'
        cmd: croncape php-session-clean
    